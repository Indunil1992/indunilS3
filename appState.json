{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "2aece18f-3774-493b-83a1-08e45d1681b0": {
        "id": "2aece18f-3774-493b-83a1-08e45d1681b0",
        "parent": null,
        "name": "indunilS3",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "fb76b32f-5efb-4aa3-a722-f71d8f17dddd"
        ],
        "isRemovable": false,
        "filePath": "indunilS3"
      },
      "fb76b32f-5efb-4aa3-a722-f71d8f17dddd": {
        "id": "fb76b32f-5efb-4aa3-a722-f71d8f17dddd",
        "parent": "2aece18f-3774-493b-83a1-08e45d1681b0",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "indunilS3/lambda.js",
        "code": "let AWS = require('aws-sdk');\nlet SL_AWS = require('slappforge-sdk-aws');\nconst sqs = new SL_AWS.SQS(AWS);\n\nexports.handler = function (event, context, callback) {\n\n    sqs.receiveMessage({\n        QueueUrl: `https://sqs.${process.env.AWS_REGION}.amazonaws.com/${process.env.SIGMA_AWS_ACC_ID}/test-queue.fifo`,\n        AttributeNames: ['All'],\n        MaxNumberOfMessages: '1',\n        VisibilityTimeout: '30',\n        WaitTimeSeconds: '0',\n        MessageAttributeNames: ['abs']\n    }).promise()\n        .then(receivedMsgData => {\n            if (!!(receivedMsgData) && !!(receivedMsgData.Messages)) {\n                let receivedMessages = receivedMsgData.Messages;\n                receivedMessages.forEach(message => {\n                    console.log(\"Success\");\n                 console.log( data );\n                    // your logic to access each message through out the loop. Each message is available under variable message \n                    // within this block\n                });\n            } else {\n                console.log(\"no msg\");\n                 console.log( data );\n                // No messages to process\n            }\n        })\n        .catch(err => {\n            console.log(\"err err\");\n                 console.log( data );\n            // error handling goes here\n        });\n\n\n    callback(null, { \"message\": \"Successfully executed SQS\" });\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusEast1sachithraAPInameqainduany",
            "config": {}
          }
        ],
        "testCases": {
          "d2e829a8-3cc3-4a7d-8349-ba71ca9583a5": {
            "id": "d2e829a8-3cc3-4a7d-8349-ba71ca9583a5",
            "name": "Unnamed event",
            "functionId": "fb76b32f-5efb-4aa3-a722-f71d8f17dddd",
            "event": "{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "2aece18f-3774-493b-83a1-08e45d1681b0",
    "openFiles": [
      "fb76b32f-5efb-4aa3-a722-f71d8f17dddd"
    ],
    "currentFileId": "fb76b32f-5efb-4aa3-a722-f71d8f17dddd",
    "resources": {
      "s3indunil1": {
        "name": "s3indunil1",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "indunil1"
          }
        }
      },
      "s3hirutest123": {
        "name": "s3hirutest123",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "hiru.test123"
          },
          "destinationBucket": {
            "name": "indunil1"
          }
        }
      },
      "sqsHiru1T": {
        "name": "sqsHiru1T",
        "type": "SQS",
        "config": {
          "mode": 1,
          "existing": true,
          "name": "Hiru1T",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/Hiru1T",
          "selectedRegion": "us-east-1",
          "deliveryDelay": "0",
          "deliveryDelayUnit": "seconds",
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": "120",
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": "345600",
          "messageRetentionPeriodUnit": "seconds",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": "0",
          "queueARN": "arn:aws:sqs:us-east-1:318300609668:Hiru1T"
        }
      },
      "apigusEast1TestAPIqainduany": {
        "name": "apigusEast1TestAPIqainduany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "TestAPI",
          "apiId": "0itznun7w3",
          "endpointType": "EDGE",
          "rootResourceId": "h2lelj6j7k",
          "existingResources": {
            "/hiru/test": "2b8zt0",
            "/testPathWithSlash": "2rkw74",
            "/hiru": "3nc52b",
            "/hiru/sample": "4226gg",
            "/hiru/sqstest": "88gr2y",
            "/MyLambda": "98nqbj",
            "/": "h2lelj6j7k",
            "/testWithSlash": "q4m4g1",
            "/testtwospeciallambda": "q4szm3",
            "/testtwospecialkumutest": "wey3lk",
            "/hiru/snscheck": "wok1ku"
          },
          "resourceMode": 0,
          "resourceName": "qa/indu",
          "resourcePath": "/qa/indu",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "test11",
          "mode": 1
        }
      },
      "apigusEast1sachithraAPInameqainduany": {
        "name": "apigusEast1sachithraAPInameqainduany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "sachithraAPIname",
          "apiId": "052p9kjn18",
          "endpointType": "REGIONAL",
          "rootResourceId": "zrjp6rdv3b",
          "existingResources": {
            "/": "zrjp6rdv3b"
          },
          "resourceMode": 0,
          "resourceName": "qa/indu",
          "resourcePath": "/qa/indu",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "test",
          "mode": 1
        }
      },
      "sqstestQueuefifo": {
        "name": "sqstestQueuefifo",
        "type": "SQS",
        "config": {
          "mode": 1,
          "existing": true,
          "name": "test-queue.fifo",
          "url": "https://sqs.us-east-1.amazonaws.com/318300609668/test-queue.fifo",
          "selectedRegion": "us-east-1",
          "deliveryDelay": "0",
          "deliveryDelayUnit": "seconds",
          "queueType": "fifoQueue",
          "defaultVisibilityTimeout": "30",
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": "345600",
          "messageRetentionPeriodUnit": "seconds",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": "0",
          "queueARN": "arn:aws:sqs:us-east-1:318300609668:test-queue.fifo"
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "slappforge-sdk-aws": {
          "name": "slappforge-sdk-aws",
          "language": "javascript",
          "version": "0.0.5",
          "dev": false,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "indunilS3",
    "projectDescription": "test7152019",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1563366722064
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "indunilS3",
      "url": "https://github.com/Indunil1992/indunilS3"
    }
  }
}